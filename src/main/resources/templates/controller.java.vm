package ${package.Controller};


import com.qizhi.itfin.common.util.PageUtils;
import com.qizhi.itfin.common.util.R;
import com.qizhi.itfin.entity.${table.entityName};
import com.qizhi.itfin.service.${table.serviceName};

import com.alibaba.fastjson.JSON;
import com.baomidou.mybatisplus.plugins.Page;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.validation.Valid;
import java.util.HashMap;
import java.util.Map;
/**
 * $!{table.comment} 前端控制器
 */
@Slf4j
@Controller
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} service;

    /**
     * 分页显示$!{table.comment}
     *
     * @param current 当前页
     * @param size    每页大小
     * @param sort    排序字段
     * @param order   asc/desc
     * @param search  查找字段
     */
    @RequestMapping("/list")
    @ResponseBody
    public R list(@RequestParam(name = "current") Integer current,
                    @RequestParam(name = "size") Integer size,
                    @RequestParam(name = "sort", required = false) String sort,
                    @RequestParam(name = "order", required = false) String order,
                    @RequestParam(name = "search", required = false) String search) {
        Boolean isAsc = true;
        if (StringUtils.isNoneBlank(order)) {
            isAsc = order.equalsIgnoreCase("asc");
        }
        Map<String, String> searchMap = new HashMap<>();
        if (StringUtils.isNoneBlank(search)) {
            searchMap = (Map<String, String>) JSON.parse(search);
        }

        Page<${table.entityName}> page = service.list(current, size, sort, isAsc, searchMap);
        PageUtils pageUtils = new PageUtils(page);
        return R.ok().put("page", pageUtils);
    }

    /**
     * 新增${table.comment}
     */
    @RequestMapping("/save")
    @ResponseBody
    public R save(@Valid ${table.entityName} entity, BindingResult result) {
        if (result.hasErrors()) { // 验证有误
            return R.error(result.getFieldError().getDefaultMessage());
        }
        if(service.insert(entity)){
            return R.ok();
        }else {
            return R.error("添加失败!");
        }
    }

    /**
     * 删除${table.comment}
     */
    @RequestMapping("/delete")
    @ResponseBody
    public R delete(@RequestParam(name = "id") Integer id) {
        if(service.deleteById(id)){
            return R.ok();
        }else {
            return R.error("删除失败!");
        }
    }

    /**
     * 修改${table.comment}
     */
    @RequestMapping("/update")
    @ResponseBody
    public R update(@Valid ${table.entityName} entity, BindingResult result) {
        if (result.hasErrors()) { // 验证有误
            return R.error(result.getFieldError().getDefaultMessage());
        }
        if(service.updateById(entity)){
            return R.ok();
        } else {
            return R.error("修改失败!");
        }
    }

    /**
     * 查询${table.comment}信息
     *
     * @param id id
     */
    @RequestMapping("/info")
    @ResponseBody
    public R info(@RequestParam(name = "id") Integer id) {
        ${table.entityName} entity = service.selectById(id);
        return R.ok().put("data", entity);
    }
}

#end